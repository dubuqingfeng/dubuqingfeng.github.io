<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>独步清风's blog</title><link href="dubuqingfeng.github.io/" rel="alternate"></link><link href="dubuqingfeng.github.io/feeds/github.atom.xml" rel="self"></link><id>dubuqingfeng.github.io/</id><updated>2015-03-04T12:22:00+01:00</updated><entry><title>git-fork项目后与原项目进行同步</title><link href="dubuqingfeng.github.io/posts/2015/%203/04/201503-git-fork-synchronized/index.html" rel="alternate"></link><updated>2015-03-04T12:22:00+01:00</updated><author><name>admin</name></author><id>tag:,2015-03-04:dubuqingfeng.github.io/posts/2015/ 3/04/201503-git-fork-synchronized/index.html</id><summary type="html">&lt;h5&gt;0x01 与原项目进行同步&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;在github里，每当fork一个项目后，如何保持与原作者的同步？一般可以以下几步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.首先clone自己，从git获取自己仓库的内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/xxx.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.添加远程仓库
添加远程仓库的别名，获取远程仓库的内容并合并。如果有冲突则需要手动解决冲突。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git remote add username https://github.com/xxx.git
git fetch username
git merge username/master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.提交改动，推到远程的master分支。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git commit -m &amp;quot;merge from username-xx&amp;quot;
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.查看本地仓库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git remote -v
git branch -a
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x02 git协同命令&lt;/h5&gt;
&lt;p&gt;如果是个人产品，不是那种产品需要上线的服务。&lt;/p&gt;
&lt;p&gt;当使用git进行协作开发的时候，可以设置好几个分支，以主分支master为开发版，Release分支为发行版。&lt;/p&gt;
&lt;p&gt;而产品类型的git协作时，主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做Develop。&lt;/p&gt;
&lt;p&gt;Git创建Develop分支的命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout -b develop master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将Develop分支发布到Master分支的命令：&lt;/p&gt;
&lt;p&gt;切换到Master分支&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对Develop分支进行合并&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git merge --no-ff develop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;默认情况下，Git执行"快进式合并"（fast-farward merge），会直接将Master分支指向Develop分支。
其他分支：&lt;/p&gt;
&lt;p&gt;功能（feature）分支&lt;/p&gt;
&lt;p&gt;预发布（release）分支&lt;/p&gt;
&lt;p&gt;修补bug（fixbug）分支&lt;/p&gt;
&lt;h5&gt;0x03 Pull Request&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;当某个人fork项目后，并推送改动后如何处理？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这时会收到一个open的Pull Request，然后决定是否合并，不合并可以忽略。&lt;/p&gt;</summary><category term="git"></category><category term="fork"></category></entry></feed>