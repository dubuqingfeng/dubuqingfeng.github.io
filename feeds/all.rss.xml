<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>独步清风's blog</title><link>http://dbqf.xyz/</link><description></description><atom:link href="http://dbqf.xyz/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 07 Jun 2015 12:25:00 +0200</lastBuildDate><item><title>如何使用PreferenceFragment方便地完成设置界面</title><link>http://dbqf.xyz/201506-android-Preference-fragment.html</link><description>&lt;h5&gt;0x01 前言&lt;/h5&gt;
&lt;p&gt;在设置界面的开发时，以前往往通过自己写界面，在没有合适美工时，比较费时费力，尤其是以前需要兼容Android2.3的时候。当3.0以后出现了PreferenceFragment，可以快速地完成一个类似于系统设置的偏好设定界面。&lt;/p&gt;
&lt;p&gt;在android3.0以后，官方推荐使用PreferenceFragment去替代PreferenceActivity。&lt;/p&gt;
&lt;p&gt;以及一些配置。&lt;/p&gt;
&lt;h5&gt;0x02 浅析&lt;/h5&gt;
&lt;p&gt;PreferenceFragment是继承于Fragment，实现了PreferenceManager.OnPreferenceTreeClickListener这些接口。&lt;/p&gt;
&lt;h5&gt;0x03 完成步骤&lt;/h5&gt;
&lt;p&gt;通过新建项目的方式：&lt;/p&gt;
&lt;p&gt;在android-studio里，新建一个项目：PreferenceFragmentTest&lt;/p&gt;
&lt;p&gt;选择Blank Activity With Fragment，填写activity为SettingActivity。&lt;/p&gt;
&lt;p&gt;修改fragment继承PreferenceFragment。&lt;/p&gt;
&lt;p&gt;新建一个xml文件，建立/res/xml/preferences.xml&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;PreferenceScreen&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;PreferenceCategory&lt;/span&gt;
        &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;设置A&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;CheckBoxPreference&lt;/span&gt;
            &lt;span class="na"&gt;android:key=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;checkbox_preference&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;标题&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;android:summary=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;详细&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/PreferenceCategory&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;PreferenceCategory&lt;/span&gt;
        &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;设置B&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;EditTextPreference&lt;/span&gt;
            &lt;span class="na"&gt;android:key=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;edittext_preference&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;标题&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;android:summary=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;详细&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;android:dialogTitle=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;对话框标题&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/PreferenceCategory&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/PreferenceScreen&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在SettingFragment中，通过addPreferencesFromResource(R.xml.preferences);加载上述的xml文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.preferences);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;设置项保存到哪了？SharedPreferences。在/data/data/应用包名/shared_prefs/应用包名_preferences.xml文件中，android:key即为键值名。&lt;/p&gt;
&lt;p&gt;如何读取设置？通过SharedPreferences&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SharedPreferences mySharedPreferences = PreferenceManager
        .getDefaultSharedPreferences(this);

boolean my_checkbox_preference = mySharedPreferences.getBoolean(
        &amp;quot;checkbox_preference&amp;quot;, false);
prefCheckBox.setChecked(my_checkbox_preference);

String my_edittext_preference = mySharedPreferences.getString(
        &amp;quot;edittext_preference&amp;quot;, &amp;quot;&amp;quot;);
prefEditText.setText(my_edittext_preference);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;列表设置项的ListPreferences类：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;ListPreference
      android:key=&amp;quot;list_preference&amp;quot;
      android:title=&amp;quot;@string/标题&amp;quot;
      android:dialogTitle=&amp;quot;@string/对话框标题&amp;quot;
      android:entries=&amp;quot;@array/listArray&amp;quot;
      android:entryValues=&amp;quot;@array/listValues&amp;quot; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;entries和entryValues从哪来？/res/values/array.xml或者/res/values/strings.xml&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;string-array&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listArray&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;Headings&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;Headings and Details&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;All Data&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/string-array&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;string-array&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listValues&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/string-array&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;preference-headers类&lt;/p&gt;
&lt;h5&gt;0x04 Preference类&lt;/h5&gt;
&lt;p&gt;前几天在SIMS(学生信息管理系统)项目中，涉及到了Preference这个类，当时可以通过输入输出流进行与文件的交互。&lt;/p&gt;
&lt;h5&gt;0x05 思考&lt;/h5&gt;
&lt;p&gt;其PreferenceFragment文件源码地址在：&lt;a href="https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/preference/PreferenceFragment.java"&gt;googlesource&lt;/a&gt;，其中利用了ListView进行界面绘制。另外grepcode.com这个网站是个不错的查看android源代码(AOSP)的网站。以及还有一些&lt;a href="http://www.programcreek.com/java-api-examples/index.php?api=android.preference.PreferenceFragment"&gt;示例代码&lt;/a&gt;，&lt;/p&gt;
&lt;h5&gt;0x0100 参考链接&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://developer.android.com/guide/topics/ui/settings.html"&gt;Settings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://developer.android.com/reference/android/preference/PreferenceFragment.html"&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cs.dartmouth.edu/~campbell/cs65/lecture12/lecture12.html"&gt;Using PreferenceFragment to Store User Preferences&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/codepath/android_guides/wiki/Settings-with-PreferenceFragment"&gt;Settings with PreferenceFragment&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sun, 07 Jun 2015 12:25:00 +0200</pubDate><guid>tag:dbqf.xyz,2015-06-06:201506-android-Preference-fragment.html</guid><category>Android</category><category>PreferenceFragment</category></item><item><title>Linux VPS的一些配置</title><link>http://dbqf.xyz/201505-vps-base-setting.html</link><description>&lt;h5&gt;0x01 更改默认ssh登录端口&lt;/h5&gt;
&lt;p&gt;一般ssh是开放的，容易受到攻击或者爆破等行为。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#vi /etc/ssh/sshd_config

#Port 22             //先把22注释掉

Port 2754            //添加一个新的端口
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启ssh服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x02 使用密钥登录而不是密码&lt;/h5&gt;
&lt;p&gt;在一个自用的vps上，避免使用密码登录，妥善保管好密钥，可以提高一定的安全性。&lt;/p&gt;
&lt;p&gt;一开始使用Xshell的密钥生成工具，在工具选项卡中，有新建用户密钥生成向导，选择RSA，密钥长度为2048位，下一步输入私钥密码，涉及到了非对称加密，详细原理正在读《深入浅出密码学》，一些RSA算法，在256位密钥以上进行蛮力攻击时耗费时间较长。生成了pub格式的公钥。&lt;/p&gt;
&lt;p&gt;将我们生成的pub公钥文件上传到/root/.ssh文件夹下面（如果没有我们需要创建），然后我们需要将id_rsa_2048.pub重命名为authorized_keys 并且用chmod 600 authorized_keys设置权限。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chmod 600 /root/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找到/etc/ssh/sshd_config ，把RSAAuthentication和PubkeyAuthentication两行前面的#注释去掉。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启sshd服务的另一种方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Debian/Ubuntu执行：/etc/init.d/ssh restart
CentOS执行：/etc/init.d/sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;禁止密码登录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/ssh/sshd_config 文件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找到PasswordAuthentication后面的yes改成no。&lt;/p&gt;
&lt;h5&gt;0x03 查看登录日志&lt;/h5&gt;
&lt;p&gt;首先进入日志目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /var/log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看ssh用户的登录日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;less secure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看登录成功的ip信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;last
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看登录失败的ip信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lastb
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x04 配置shadowsocks&lt;/h5&gt;
&lt;p&gt;安装setuptools&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install -y python-setuptools
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装完毕后，easy_install命令就可以使用了。&lt;/p&gt;
&lt;p&gt;安装pip，默认安装到/usr/bin目录下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;easy_install pip
pip install shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建shadowsocks的配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/shadowsocks.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{
        &amp;quot;server&amp;quot;:&amp;quot;your_server_ip&amp;quot;,
        &amp;quot;server_port&amp;quot;:8989,
        &amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
        &amp;quot;local_port&amp;quot;:1080,
        &amp;quot;password&amp;quot;:&amp;quot;yourpassword&amp;quot;,
        &amp;quot;timeout&amp;quot;:600,
        &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;,
        &amp;quot;fast_open&amp;quot;: false,
        &amp;quot;workers&amp;quot;: 1
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一些优化：&lt;/p&gt;
&lt;p&gt;安装 gevent可以提高 Shadowsocks的性能。CentOS下安装gevent依赖libevent和greenlet。&lt;/p&gt;
&lt;p&gt;安装libevent：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install -y libevent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装greenlet：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install greenlet
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装gevent：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install gevent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行shadowsocks服务端：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssserver -c /etc/shadowsocks.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果想在后台一直运行Shadowsocks，启动命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nohup ssserver -c /etc/shadowsocks.json &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;防火墙的设置&lt;/p&gt;
&lt;p&gt;编辑防火墙配置文件/etc/sysconfig/iptables，将服务器端口（server_port）放行。
新增一条防火墙规则：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-A INPUT -m state --state NEW -m tcp -p tcp --dport 8989 -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启防火墙iptables：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service iptables restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用docker部署shadowsocks服务。&lt;/p&gt;
&lt;p&gt;1.安装并测试Docker，可以参考官方文档。或者是《Docker入门与实践》安装一节。&lt;/p&gt;
&lt;p&gt;2.拉取镜像&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker pull index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.运行容器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker run -d -p 1984:1984 index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks -p 1984 -k sspassword -m aes-256-cfb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;1984即为服务器端口。&lt;/p&gt;
&lt;p&gt;sspassword为连接密码，自行更换。&lt;/p&gt;
&lt;p&gt;aes-256-cfb为加密方式。&lt;/p&gt;
&lt;p&gt;也可以使用-c /etc/shadowsocks.json参数。&lt;/p&gt;
&lt;p&gt;4.测试运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker ps -a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果出现up即为安装成功。&lt;/p&gt;
&lt;p&gt;Centos7版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker pull index.alauda.cn/dubuqingfeng/centos7-shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行容器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker run -d -p 1984:1984 index.alauda.cn/dubuqingfeng/centos7-shadowsocks -p 1984 -k sspassword -m aes-256-cfb
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x05 Koding环境配置pelican简记&lt;/h5&gt;
&lt;p&gt;Koding是一个在线IDE环境，适合进行Web方面的开发，支持Java、PHP、NodeJS、Perl、Python、Ruby、C、C++和Go等编程语言，貌似不太好绑定自定义域名。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-pip
pip install pelican
sudo apt-get install python-virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x06 后记&lt;/h5&gt;
&lt;p&gt;需要进一步学习SSH协议，Linux服务器管理，密码学，sock5代理，iptables。&lt;/p&gt;
&lt;p&gt;路漫漫，盖余之勤且艰若此。&lt;/p&gt;
&lt;p&gt;专注地做好每一件事。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sun, 17 May 2015 12:15:00 +0200</pubDate><guid>tag:dbqf.xyz,2015-05-16:201505-vps-base-setting.html</guid><category>Linux</category><category>vps</category></item><item><title>ubuntu sdk、ubuntu touch、qml、ionic开发入坑记</title><link>http://dbqf.xyz/201505-ubuntutouch-ionic-qml.html</link><description>&lt;h5&gt;0x01 前言&lt;/h5&gt;
&lt;p&gt;人生就是一个不断挖坑、埋坑的过程，最近又接了一些活，参加一些比赛。并且尝试开发一些不同平台的应用。&lt;/p&gt;
&lt;h5&gt;0x02 ubuntu sdk&lt;/h5&gt;
&lt;p&gt;ubuntu sdk是基于QT Creator，自然开发起来主要是QT、qml，QT的基础仅是会调一些控件，了解信号槽机制，对于其他的SQL、串口通信没了解过，也没有做过完整的项目。其优势跨平台，然而QT在安卓上的发展并没有HTML5火，并且打包出来相对原生较大的感觉。为了响应敏捷开发，QT还有一个QT Quick，采用qml语言，其语法与javascript较为类似，qml代码如果有javascript和安卓开发基础就好理解。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get update &amp;amp;&amp;amp; apt-get dist-upgrade
apt-get install ubuntu-sdk
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x03 ubuntu touch&lt;/h5&gt;
&lt;p&gt;作为ubuntu在手机端的产品，据说魅族也要联合推出手机，相类似的有Firefox OS、Salish……，主要开发方式有QT原生、HTML5、Scope，应该也可以用go、python进行开发，鉴于HTML5开发手机应用的不成熟，尤其是这种非安卓、iOS的，能想到的也就是用phoneGap构建，相对来说，展示类应用，用HTML5开发效率高。&lt;/p&gt;
&lt;p&gt;相对Android来说，ubuntu touch感觉风格较统一，有便利的边缘交互模式，但是只靠这几点去赢得市场，在应用为王的移动互联网时代中比较难。一个用户，尤其是80后，90后，00后，系统上连微信、QQ都没有，比较难将其做为主力机。&lt;/p&gt;
&lt;p&gt;PS：
1.前几天应用市场上发布了Web QQ，使用了Web App进行开发的。&lt;/p&gt;
&lt;h5&gt;0x04 QML&lt;/h5&gt;
&lt;h5&gt;0x05 ionic&lt;/h5&gt;
&lt;p&gt;ionic的安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  $ npm install -g cordova ionic
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ionic in Action
一些AngularJS入门资料&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AngularJS入门教程&lt;/p&gt;
&lt;p&gt;AngularJS权威教程&lt;/p&gt;
&lt;p&gt;用AngularJS开发下一代Web应用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;0x100 参考资料&lt;/h5&gt;
&lt;p&gt;AngularJS&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 12 May 2015 12:26:00 +0200</pubDate><guid>tag:dbqf.xyz,2015-05-12:201505-ubuntutouch-ionic-qml.html</guid><category>ubuntu sdk</category><category>ubuntu touch</category><category>qml</category><category>ionic</category></item><item><title>基于Arduino的解魔方机器人一些总结</title><link>http://dbqf.xyz/201504-Rubik's-Cube-Robot-yixiezongjie.html</link><description>&lt;h5&gt;0x01 显示屏大显部分&lt;/h5&gt;
&lt;p&gt;常见的魔方比赛可以&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Thu, 30 Apr 2015 20:12:00 +0200</pubDate><guid>tag:dbqf.xyz,2015-04-30:201504-Rubik's-Cube-Robot-yixiezongjie.html</guid><category>电子设计</category><category>解魔方机器人</category></item><item><title>基于Arduino的解魔方机器人后续扩展</title><link>http://dbqf.xyz/201504-Rubik's-Cube-Robot-houxukuozhan.html</link><description>&lt;h5&gt;0x01 显示屏大显部分&lt;/h5&gt;
&lt;p&gt;常见的魔方比赛可以&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Mon, 20 Apr 2015 20:12:00 +0200</pubDate><guid>tag:dbqf.xyz,2015-04-20:201504-Rubik's-Cube-Robot-houxukuozhan.html</guid><category>电子设计</category><category>解魔方机器人</category></item><item><title>基于Arduino的解魔方机器人软件设计与实现</title><link>http://dbqf.xyz/201503-Rubik's-Cube-Robot-Ruanjiansheji.html</link><description>&lt;h5&gt;0x01 Android上位机设计部分&lt;/h5&gt;
&lt;p&gt;常见的魔方比赛可以&lt;/p&gt;
&lt;h5&gt;0x02 Android代码思路&lt;/h5&gt;
&lt;h5&gt;0x03 Android软件测试&lt;/h5&gt;
&lt;h5&gt;0x04 Arduino测试代码思路&lt;/h5&gt;
&lt;p&gt;首先通过官方示例程序Knob和Sweep测试舵机运行情况&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt; Controlling a servo position using a potentiometer (variable resistor) &lt;/span&gt;
&lt;span class="cm"&gt; by Michal Rinott &amp;lt;http://people.interaction-ivrea.it/m.rinott&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt; modified on 8 Nov 2013&lt;/span&gt;
&lt;span class="cm"&gt; by Scott Fitzgerald&lt;/span&gt;
&lt;span class="cm"&gt; http://arduino.cc/en/Tutorial/Knob&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;Servo.h&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// create servo object to control a servo&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;potpin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// analog pin used to connect the potentiometer&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// variable to read the value from the analog pin&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// attaches the servo on pin 9 to the servo object&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analogRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;potpin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="c1"&gt;// reads the value of the potentiometer (value between 0 and 1023) &lt;/span&gt;
  &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1023&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// scale it to use it with the servo (value between 0 and 180) &lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  &lt;span class="c1"&gt;// sets the servo position according to the scaled value &lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                           &lt;span class="c1"&gt;// waits for the servo to get there &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* Sweep&lt;/span&gt;
&lt;span class="cm"&gt; by BARRAGAN &amp;lt;http://barraganstudio.com&amp;gt; &lt;/span&gt;
&lt;span class="cm"&gt; This example code is in the public domain.&lt;/span&gt;

&lt;span class="cm"&gt; modified 8 Nov 2013&lt;/span&gt;
&lt;span class="cm"&gt; by Scott Fitzgerald&lt;/span&gt;
&lt;span class="cm"&gt; http://arduino.cc/en/Tutorial/Sweep&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;Servo.h&amp;gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// create servo object to control a servo &lt;/span&gt;
                &lt;span class="c1"&gt;// twelve servo objects can be created on most boards&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// variable to store the servo position &lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// attaches the servo on pin 9 to the servo object &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// goes from 0 degrees to 180 degrees &lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;                                  &lt;span class="c1"&gt;// in steps of 1 degree &lt;/span&gt;
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;              &lt;span class="c1"&gt;// tell servo to go to position in variable &amp;#39;pos&amp;#39; &lt;/span&gt;
    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                       &lt;span class="c1"&gt;// waits 15ms for the servo to reach the position &lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;// goes from 180 degrees to 0 degrees &lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;              &lt;span class="c1"&gt;// tell servo to go to position in variable &amp;#39;pos&amp;#39; &lt;/span&gt;
    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                       &lt;span class="c1"&gt;// waits 15ms for the servo to reach the position &lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x05 Arduino代码&lt;/h5&gt;
&lt;p&gt;Arduino代码部分在github上也可找到，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用串口测试成对舵机的代码--&amp;gt;DoubleServo&lt;/p&gt;
&lt;p&gt;约定一些操作码和公式进行方便控制舵机的代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;0x05 计算解法公式&lt;/h5&gt;
&lt;p&gt;涉及到魔方解法部分，&lt;/p&gt;
&lt;h5&gt;0x06 蓝牙发送操作码&lt;/h5&gt;
&lt;p&gt;分为普通公式与特定操作码部分，普通公式主要为使用二阶段算法计算出来的解法公式，并且约定带+号为顺时针旋转，带-号为逆时针旋转，特定操作码约定一些特定的舵机控制操作，主要以下列表所示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全部还原固定角度&lt;/p&gt;
&lt;p&gt;成对舵机转动固定角度&lt;/p&gt;
&lt;p&gt;单个舵机转动固定角度&lt;/p&gt;
&lt;p&gt;从舵机进行转动，使机械臂进行前进与后退操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;0x07 魔方解法操作对应舵机动作分析&lt;/h5&gt;
&lt;p&gt;因为舵机转动角度为0～180度，所以在初始角度中有两种，可以在0度，使得可以一次性做U和U2类型的操作(关于魔方转法表示，参考详细思考)，魔方解法为上黄下白前橙的初始位置。&lt;/p&gt;
&lt;p&gt;R动作分析如下：2f号舵机旋转到90度，延迟等待旋转完毕，2b号舵机旋转，使机械臂后退，延迟等待旋转完毕，2f号舵机旋转到0度，延迟等待旋转完毕，2b号舵机旋转，使机械臂前进卡住魔方。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Fri, 10 Apr 2015 20:18:00 +0200</pubDate><guid>tag:dbqf.xyz,2015-04-10:201503-Rubik's-Cube-Robot-Ruanjiansheji.html</guid><category>电子设计</category><category>解魔方机器人</category></item><item><title>基于Arduino的解魔方机器人组装调试</title><link>http://dbqf.xyz/201503-Rubik's-Cube-Robot-Zhuzhuangtiaoshi.html</link><description>&lt;h5&gt;0x01 LM3S615&lt;/h5&gt;
&lt;p&gt;此板是属于TI公司LM3S系列，是ARM Cortex-M3内核，相关手册以及电路图、说明书也在&lt;a href="http://download"&gt;&lt;/a&gt;有下载，主要使用20针JTAG接口与J-LINK仿真器进行连接调试，主要有关系的是LM3S615的串口通信，PWM模块和GPIO接口。&lt;/p&gt;
&lt;h5&gt;0x02 TTL与RS-232&lt;/h5&gt;
&lt;p&gt;波特率&lt;/p&gt;
&lt;h5&gt;0x03 GPIO&lt;/h5&gt;
&lt;p&gt;第一次接触GPIO是在树莓派上，可以利用其进行一些输入或者输出的控制。&lt;/p&gt;
&lt;h5&gt;0x04 舵机控制板&lt;/h5&gt;
&lt;p&gt;采用的是普通Arduino24路舵机控制板V4.21，可以通过单片机、Arduino、蓝牙模块等控制舵机。详细说明在&lt;a href=""&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;舵机控制板如图所示，电源，中间可以使用蓝牙模块进行控制，预留了RXD、TXD、GND以及3.3V或5V&lt;/p&gt;
&lt;h5&gt;0x05 UART串口&lt;/h5&gt;
&lt;h5&gt;0x06 系统控制框图&lt;/h5&gt;
&lt;p&gt;因为甘特图markdown解析器可能不支持，系统控制框图如图所示。&lt;/p&gt;
&lt;h5&gt;0x06 整体结构设计&lt;/h5&gt;
&lt;h5&gt;0x07 机械手的设计&lt;/h5&gt;
&lt;p&gt;CAD截面图如图所示，使用亚克力板进行切割制作&lt;/p&gt;
&lt;h5&gt;0x08 主舵机导轨的设计&lt;/h5&gt;
&lt;h5&gt;0x09 从舵机的处理&lt;/h5&gt;
&lt;h5&gt;0x10 舵机控制板与舵机的测试&lt;/h5&gt;
&lt;p&gt;舵机控制板首先需要考虑电源供电的问题，因为舵机电源需要5V的，是否共地，以及舵机的电流等。&lt;/p&gt;
&lt;p&gt;舵机部分供电采取DC直流5V，&lt;/p&gt;
&lt;p&gt;舵机控制板，先采取笔记本电脑使用usb转串口模块连接，然后利用一些上位机程序，控制舵机的一定角度的旋转，&lt;/p&gt;
&lt;p&gt;舵机控制板的一些指令集：&lt;/p&gt;
&lt;h5&gt;0x11 蓝牙与舵机控制板的连接测试&lt;/h5&gt;
&lt;p&gt;首先需要考虑蓝牙模块供电问题，&lt;/p&gt;
&lt;h5&gt;0x100 参考文献&lt;/h5&gt;
&lt;p&gt;《ARM体系结构与外设接口实战开发》(北京航空航天大学出版社)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 24 Mar 2015 22:12:00 +0100</pubDate><guid>tag:dbqf.xyz,2015-03-24:201503-Rubik's-Cube-Robot-Zhuzhuangtiaoshi.html</guid><category>电子设计</category><category>解魔方机器人</category></item><item><title>基于Arduino的解魔方机器人详细思考</title><link>http://dbqf.xyz/201503-Rubik's-Cube-Robot-Xiangxisikao.html</link><description>&lt;h5&gt;0x01 显示屏大显部分&lt;/h5&gt;
&lt;p&gt;常见的魔方比赛可以&lt;/p&gt;
&lt;h5&gt;0x02 系统设计框图设计&lt;/h5&gt;
&lt;p&gt;主控板采取官方平台LM3S615平台，其供电采取电源适配器转3.3V(5V)，&lt;/p&gt;
&lt;h5&gt;0x03 系统流程图设计&lt;/h5&gt;
&lt;p&gt;首先需要采集魔方，采集颜色信息，将其转换为矩阵表示。然后进行算法求解，计算出算法以后，通过蓝牙等适配器将求解步骤传到下位机，然后下位机连接好魔方，进行控制舵机进行旋转。&lt;/p&gt;
&lt;h5&gt;0x04 电路板设计&lt;/h5&gt;
&lt;p&gt;电路板部分涉及到了通用版。&lt;/p&gt;
&lt;h5&gt;0x05 材料的选择&lt;/h5&gt;
&lt;p&gt;1.魔方：采用5.7CM的标准魔方，以顺滑和容错为标准，适当调整螺丝。
2.蓝牙适配器：现有HC-05和HM-10两种，主要是下位机接收命令的，应该是配置成从机。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Fri, 20 Mar 2015 20:12:00 +0100</pubDate><guid>tag:dbqf.xyz,2015-03-20:201503-Rubik's-Cube-Robot-Xiangxisikao.html</guid><category>电子设计</category><category>解魔方机器人</category></item><item><title>基于Arduino的解魔方机器人初步设计</title><link>http://dbqf.xyz/201503-Rubik's-Cube-Robot-start.html</link><description>&lt;h5&gt;0x01 材料&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Android手机(摄像头正常)&lt;/li&gt;
&lt;li&gt;魔方(5.7cm,非地摊货)&lt;/li&gt;
&lt;li&gt;亚克力板(充当底板部分以及部分机械手)&lt;/li&gt;
&lt;li&gt;舵机(因采取四向导轨式，所以大致需要8个舵机)&lt;/li&gt;
&lt;li&gt;舵机控制板？&lt;/li&gt;
&lt;li&gt;xxx控制板。&lt;/li&gt;
&lt;li&gt;开发用的计算机一台(配置好安卓开发环境，以及keil等，本次采用android studio)&lt;/li&gt;
&lt;li&gt;光滑小轮&lt;/li&gt;
&lt;li&gt;螺丝&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;0x02 整体结构&lt;/h5&gt;
&lt;p&gt;整体主要有四种结构。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;四向推进式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大部分的解魔方机器人都是这种结构，基本不需要考虑魔方重力的影响，但是需要的舵机较多，控制也较为稳定，机械手的设计只需要考虑与魔方的配合，以及与舵机的连接。示例项目为&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;垂直手臂式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种结构主要是将两个机械手垂直，魔方斜向控制，可以采用4个舵机，示例项目为&lt;a href="http://www.baidu.com"&gt;u&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;单向旋转式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种结构主要旋转的是正反一个方向或者是，大部分的乐高机器人采取这种。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;内嵌中心块式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种结构在解魔方速度上占优势，在有良好的解魔方算法后，可以达到秒级解魔方，有个视频采取这种结构的，只用了两三秒，不需要太多考虑伸缩或者推进。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设计出的结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;结构需要同时考虑速度和性能，单向的需要旋转好几次，实际步骤稍微有点多，最快也大致三十秒，慢的也有七八分钟，由于速度上不占优势，所以没考虑这种结构；垂直手臂虽然相对于那种的结构稍微好点，但是机械手的设计还和魔方的重力有关系，重力和魔方与机械手的接触力的合力向下，由于机械部分不是很熟，感觉设计出的机械手不能在转魔方的时候承担重力的分力，也没太多考虑这种结构；内嵌中心块可能需要破坏魔方的结构，并且机械手需要另外找材料，切合度没有太多把握，可能需要将魔方的中心块卸下来，软件算法需要对应好魔方的配色，虽然解法较快，不需要推进后退所需的时间，但是也没太多地去考虑这种结构，&lt;/p&gt;
&lt;p&gt;最后得出的结构为四向导轨式的，然后在机械臂的推进部分与底盘连接的地方又有两种结构，一种类似于导轨式的滑动，另一种配置好塑料条，利用中间的孔将钢轴插入，前进后退。这时需要考虑材料的问题。&lt;/p&gt;
&lt;p&gt;四方给进轴为解魔方的主操作部分，给进轴由旋转主舵机和伸进从舵机两部分组成。主控由exp-xxx组成，后期可以改为arduino或者树莓派，arduino可以进一步降低成本，采用Android手机摄像头作为颜色采集和识别设备。&lt;/p&gt;
&lt;p&gt;整体设计框图：&lt;/p&gt;
&lt;p&gt;闭环控制模型：&lt;/p&gt;
&lt;h5&gt;0x03 机械手结构&lt;/h5&gt;
&lt;h5&gt;0x04 机械臂结构&lt;/h5&gt;
&lt;p&gt;机械臂大致有两种结构，一种是导轨式，另一种利用塑料条辅助进行推进伸缩。&lt;/p&gt;
&lt;h5&gt;0x05 软件算法方面设计&lt;/h5&gt;
&lt;p&gt;软件算法方面，由于计算的是手机的CPU，所以可以有几种思路，先进行类似于字典的大规模匹配，计算出最优解，或者是通过算法计算，计算出18-24步范围解，曾经魔方有一个上帝之数，为20，称任意打乱的魔方最少需要20步可以还原。同时考虑解魔方机器人每秒几步，统计出步数与时间，从而优化结构，升级舵机可以提高解魔方的速度。&lt;/p&gt;
&lt;p&gt;在得到魔方各面的颜色信息后，是先通过数据库进行匹配还是通过算法进行计算，这里有性能方面的问题。&lt;/p&gt;
&lt;p&gt;魔方解法方面，有一个二阶段算法，可以达到22左右的步数，并且较短时间可以计算出来。&lt;/p&gt;
&lt;h5&gt;0x06 软件摄像头部分及采集识别算法设计&lt;/h5&gt;
&lt;p&gt;app软件采集部分，利用手机后置摄像头，可以前期规定魔方的九个方块范围，后期想办法达到自动识别魔方方形，识别完方形以后，进行颜色的识别。&lt;/p&gt;
&lt;p&gt;颜色识别主要使用HSL色彩系，区别于传统的RGB色彩系，HSL更适合识别相关颜色。并且同时注意部分魔方的橙色黄色红色较为相近，注意分别。&lt;/p&gt;
&lt;h5&gt;0x07 材料的选择部分&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;魔方&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;魔方采取5.7cm的三阶魔方，因为需要一定的顺滑度，因此不考虑普通的地摊三阶魔方进行主要测试，推荐大雁、国甲、圣手等牌子的魔方，魔方主要需要一定的顺滑度和容错度。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;舵机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;舵机的选择，舵机主要采用金属舵机，其他类型的舵机有步进、减速、塑料等，主舵机负责旋转部分，要求的速度和扭矩都比从舵机要求要高，并且需要180度大扭动。以配合进行U2类型的旋转(魔方旋转术语，为上层顺时针旋转180度。)&lt;/p&gt;
&lt;p&gt;从舵机部分，要求扭矩大于3.0Kg/cm，&lt;/p&gt;
&lt;h5&gt;0x08 下位机控制部分&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;测试舵机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主舵机的连接测试。&lt;/p&gt;
&lt;p&gt;从舵机的连接arduino测试。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;电路部分整体设计&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;控制板：&lt;/p&gt;
&lt;p&gt;仿真器：&lt;/p&gt;
&lt;p&gt;稳压模块：&lt;/p&gt;
&lt;p&gt;舵机：保证6V电压&lt;/p&gt;
&lt;h5&gt;0x09 安卓手机软件设计部分&lt;/h5&gt;
&lt;p&gt;整体采用material design设计，使用Axure等的进行原型设计，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要有以下几个功能：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1.摄像头识别魔方，计算解法，并通过串口传给下位机。&lt;/li&gt;
&lt;li&gt;2.指定或随机打乱公式打乱魔方。&lt;/li&gt;
&lt;li&gt;3.将魔方打出一定的花样，如一定摆放的I Love U，相对来说，高阶好摆图案。&lt;/li&gt;
&lt;li&gt;4.将解魔方所用时间如何显示到大显上。&lt;/li&gt;
&lt;li&gt;5.当三阶魔方完善以后扩展到二阶、四阶、五阶等魔方。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;关于界面方面的设计：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1.采用material design设计，体现阴影等元素，采取滑动侧边栏，主界面分为三个选项卡:速解魔方，复原历史，计时复原。速解魔方有连接状态显示，蓝牙连接按钮，扫描摄像头，&lt;/li&gt;
&lt;li&gt;2.主要是使用户点击要少，&lt;/li&gt;
&lt;li&gt;3.主要功能为解魔方操作，识别魔方，计时等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;0x10 乐高机器人与之的辨析&lt;/h5&gt;
&lt;p&gt;乐高也有解魔方机器人，并且有专门的颜色传感器，&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sun, 08 Mar 2015 20:12:00 +0100</pubDate><guid>tag:dbqf.xyz,2015-03-08:201503-Rubik's-Cube-Robot-start.html</guid><category>电子设计</category><category>解魔方机器人</category></item><item><title>基于XXX的初步设计</title><link>http://dbqf.xyz/201503-RFID-RTLS-RSSI-start.html</link><description>&lt;h5&gt;0x01 RFID定位&lt;/h5&gt;
&lt;p&gt;RFID技术，无线电频率识别，一种利用射频信号自动识别目标对象并获取相关信息的技术。超高频UHF及高频HF的RFID定位技术，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RFID 定位模块&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;功能：&lt;/p&gt;
&lt;p&gt;组成示意图：&lt;/p&gt;
&lt;p&gt;接口部分：&lt;/p&gt;
&lt;p&gt;电路部分：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RFID 标签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分为主动式和被动式两种，主动式又称为有源标签，主动向读写器发送射频信号，被动式标签不带电池，又称为无源标签，其发射电波及内部所需能量来自读写器产生的电磁波，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天线&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;类型主要分为偶极子天线、微带贴片天线、线圈天线等&lt;/p&gt;
&lt;p&gt;工作模式：&lt;/p&gt;
&lt;p&gt;技术要求：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;中间件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分为软件中间件和硬件中间件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RFID 定位原理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;耦合方式分为两种，分为电感耦合(磁耦合)和反向散射耦合(电磁场耦合)两大类。&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;电感耦合&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;射频载波频率为13.56MHz和小于135kHz的频段，工作距离在1m以下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;电磁场耦合&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;工作距离在1m以上。&lt;/p&gt;
&lt;h5&gt;0x02 RFID频率的选择&lt;/h5&gt;
&lt;h5&gt;0x03 微波(2.4GHz)相关技术及思考&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;天线设计&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;0x04 初步设计示意图&lt;/h5&gt;
&lt;h5&gt;0x05 网页端显示&lt;/h5&gt;
&lt;p&gt;通过自己设计的地图模型，以反映现实的具体环境，初期进行2D地图的模拟，逐步发展到2.5D，3D。&lt;/p&gt;
&lt;h5&gt;0x06 微信公众号的对接&lt;/h5&gt;
&lt;p&gt;使用weiphp开源程序进行微信公众平台的对接，可以搭设一些后台。通过实时传回的数据进行小车的定位显示。&lt;/p&gt;
&lt;h5&gt;0x07 相关标准&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;ISO/IEC 18000标准&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;是控制空中接口的重要标准，允许的频段有6个，低于135kHz，13.56MHz，433MHz，860-930MHz，2.45GHz，5.8GHz。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ISO/IEC 18001标准&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有一定的外形标准&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ISO/IEC 10374标准&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基于微波应答器的集装箱识别标准，采用有源标签，&lt;/p&gt;
&lt;h5&gt;0x08 Q&amp;amp;A&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;Question:定位的相关技术及对比？&lt;/p&gt;
&lt;p&gt;Question:读写器与主控的连接方式&lt;/p&gt;
&lt;p&gt;Question:有源标签的信号折射问题.&lt;/p&gt;
&lt;p&gt;Question:读写器天线节点的布置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;0x09 参考文献&lt;/h5&gt;
&lt;p&gt;部分参考《射频识别(RFID)原理与应用》(电子工业出版社)第1，3，4，5，6，9，10章&lt;/p&gt;
&lt;p&gt;《单片机与计算机串口通信实践》第一部分，第二部分第3，4章(单片机，串口通信基础)&lt;/p&gt;
&lt;p&gt;《RFID与传感器网络：架构、协议、安全与集成》(机械工业出版社)第10，19章&lt;/p&gt;
&lt;p&gt;《UHF RFID标签天线设计、仿真及实践》(电子工业出版社)&lt;/p&gt;
&lt;p&gt;《无线射频识别(RFID)技术基础》(北京航空航天大学出版社)&lt;/p&gt;
&lt;p&gt;万方31&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sat, 07 Mar 2015 11:00:00 +0100</pubDate><guid>tag:dbqf.xyz,2015-03-06:201503-RFID-RTLS-RSSI-start.html</guid><category>电子设计</category><category>RFID</category></item><item><title>git-fork项目后与原项目进行同步</title><link>http://dbqf.xyz/201503-git-fork-synchronized.html</link><description>&lt;h5&gt;0x01 与原项目进行同步&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;在github里，每当fork一个项目后，如何保持与原作者的同步？一般可以以下几步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.首先clone自己，从git获取自己仓库的内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/xxx.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.添加远程仓库
添加远程仓库的别名，获取远程仓库的内容并合并。如果有冲突则需要手动解决冲突。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git remote add username https://github.com/xxx.git
git fetch username
git merge username/master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.提交改动，推到远程的master分支。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git commit -m &amp;quot;merge from username-xx&amp;quot;
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.查看本地仓库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git remote -v
git branch -a
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x02 git协同命令&lt;/h5&gt;
&lt;p&gt;如果是个人产品，不是那种产品需要上线的服务。&lt;/p&gt;
&lt;p&gt;当使用git进行协作开发的时候，可以设置好几个分支，以主分支master为开发版，Release分支为发行版。&lt;/p&gt;
&lt;p&gt;而产品类型的git协作时，主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做Develop。&lt;/p&gt;
&lt;p&gt;Git创建Develop分支的命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout -b develop master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将Develop分支发布到Master分支的命令：&lt;/p&gt;
&lt;p&gt;切换到Master分支&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对Develop分支进行合并&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git merge --no-ff develop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;默认情况下，Git执行"快进式合并"（fast-farward merge），会直接将Master分支指向Develop分支。&lt;/p&gt;
&lt;p&gt;其他分支：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能（feature）分支&lt;/li&gt;
&lt;li&gt;预发布（release）分支&lt;/li&gt;
&lt;li&gt;修补bug（fixbug）分支&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;0x03 Pull Request&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;当某个人fork项目后，并推送改动后如何处理？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这时会收到一个open的Pull Request，然后决定是否合并，不合并可以忽略。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Wed, 04 Mar 2015 12:22:00 +0100</pubDate><guid>tag:dbqf.xyz,2015-03-04:201503-git-fork-synchronized.html</guid><category>git</category><category>fork</category></item><item><title>2014年的那些碎碎念。</title><link>http://dbqf.xyz/201502-2014.html</link><description>&lt;h5&gt;0x01 前言&lt;/h5&gt;
&lt;p&gt;转眼之间大学已度一半有余，没有了刚来大学的不习惯，逐渐地在寻找自己的那一只方向，从建立社团，到建立小组，以及各方面的为人处世，慢慢地提高自己，并且在所学领域希望也可以有一定的思考。&lt;/p&gt;
&lt;h5&gt;0x02 起&lt;/h5&gt;
&lt;p&gt;寒假里学习php代码审计以及一些安全方面基础部分的知识，假期结束后，和一些同学一块讨论去做三维的农大地图，使用3dmax或者maya进行绘制模型，后来也许因为分歧等原因，退出了相关活动，另外自己设备的落后也跟不上他们，还是他们弄吧。安心做做其他方面的事情，去试着写写书，在读者的角度，多弄一些图片，然后积累自己的这一方面的经验。&lt;/p&gt;
&lt;h5&gt;0x03 承&lt;/h5&gt;
&lt;p&gt;一开始“兴致勃勃”地去参加校学生会面试，面试网络中心，那时并不理解什么正装，只是随意的打扮，面试之时，尽力使自己不紧张，从社团慢慢开始介绍，到那次比赛，再到对计算机感兴趣，再到工作的想法，他们面试官也比较觉得特别，并且会说以后会联系，当初想去竞争这个职位，并不是想去得到一官半职，而是想对社团搞活动的时候也有所帮助，还可以去培养一些网络或者网站方面的人才。&lt;/p&gt;
&lt;p&gt;后来他们让做学生会网站，当时想法是通过织梦cms仿一套模板，然后将这托管到网络中心，后来了解到网络中心一般也不给这权限，当时也想也对，如果有个远程执行代码的漏洞，getshell，进一步提权，然后可以控制内网主机，织梦在后台可以直接上传文件而getshell，并且逐步开始接触CSS，去了解那些盒子模型，以及一些浮动等的基础知识，然后一知半解的去看超越css，css设计之禅等书籍，进行相关的设计，当时还没怎么接触bootstrap，使用基础的css进行设计，javascript当时也不会，后来又有一个做图书馆网站的任务，然后进行学习php，语法有的和C语言类似，进而学习如何去设计实例，设计分页。还需要注意如何避免sql注入和xss跨站攻击，以及后台登录的语句的拼接而避免万能密码的出现。记得当时一开始测试xss用例的时候，很容易弹出对话框，当然不同浏览器还有不同的方法。&lt;/p&gt;
&lt;p&gt;当时班级里还有一项统计科技创新项目的活动，班里找了几个人进行研究，当时说是会有资金支持，于是就想题目，从四轴飞行器到电动滑板车，再到一些电子设计方面的小的心型流水灯，还有特殊的盗梦陀螺，在效应和性能以及资料丰富度的各项比较中，最终选了四轴飞行器喷农药投炸弹的想法，通过控制其飞行，然后投一定的物体，这种应用当时也没有合适产品进行量产的。经过车老师的推荐，得到了信科院副院长的指点，然后还进行所需材料的统计，统计并查找资料，得出大致成本在一千元附近，电池也是航模电池的那种，然后进行改造，使其可以稳定的投放农药。后来这个项目还是没有得到资金，后来听说另外一个省级项目也没有得到相应的资金，所以被迫停止了，毕竟航模的东西好多都是烧钱的。&lt;/p&gt;
&lt;p&gt;社团还合作举行了计算机应用大赛，进行计算机基础方面的较量，虽然其中有不少尴尬，但是也没弄过类似的活动，好多都不熟悉。&lt;/p&gt;
&lt;p&gt;在五六月份的时候，感觉有点无聊，然后觉得还是报个比赛试试看，当时也有博创杯这种硬件方面的比赛，当时觉得硬件方面基本都不会，还是报个软件类的提高一下，于是选了个移动互联网创业的类型的，上面也有安全的方向，本身也对安全报有好感，所以还是选个题目，安全范围也比较广，移动安全还是属于比较热门的，然后结合点硬件方面的，进行一定的攻防，当时万能钥匙还不是很火，如何捍卫wifi，nfc之类的安全，这是思考的问题，然后设计了wifi安全管家和一个nfc安全助手，当时对安卓编程还是不是很了解，只是在13年接触过很少的东西，然后通过一些实例继续了解安卓编程方面的知识。不管能不能成功做出来以及效果如何，都是有所收获的，当时就应该觉得泛泛的不如专注一点去研究，并且这方面的资料也比较少，基本了解了一些安卓基础的知识。&lt;/p&gt;
&lt;h5&gt;0x04 转&lt;/h5&gt;
&lt;p&gt;当时有个孩子通过一些渠道，了解到我们可能会做一些网站，并且有个类似于单子的东西让我们试试看，大致是一个订餐平台，关于订餐的在13年也曾经想过，希望有一种更加良好的点评机制，然后暑假里开始设计，并且使用一些php的框架，当时思考再三，觉得应该使用一个好入门的框架进行设计，然后选择了thinkphp国人开发的这一个框架，当时对前端部分基本不会，于是分工让另一个孩子做前端部分，然后每天有空闲的时候，看看视频，看看文档，写写代码，同时又买了一套arduino设备，有空就可以开始鼓捣电子开源硬件吧，买了两块板，进行小灯泡，小开关等的搭建学习。在假期里有时也看看安卓的视频，做个小软件之类的，做了一个叫一个播放器，去思考安卓的视频播放器的实现过程，其中有底部选项卡，拼音归类，数据库sqlite的操作，Video播放等的知识点。&lt;/p&gt;
&lt;p&gt;假期总是很快的，开学之时讨论了一下，这个学期的发展。最后他们讨论出一个成立个工作室，做一个图书社交类的app，当时那几天也找下了工作地点，可以没事就可以去那工作或者休息，一开始有一个图书管理的想法，初步定位为一个图书管理加了社交功能，查看附近的人或者书，当时想的功能比较多，当然有的最后实现了有的没有，顺便报了两个比赛。但是基本都没什么结果。后来也可以总结几点，泛泛不如专注，有些人确实不是很容易去学会一些东西，大部分的东西都是只有我在做，直到最后才有几张图片，缺乏一种讨论的氛围，论团队合作的重要性。然后就有点不想和这个团队合作的感觉。&lt;/p&gt;
&lt;p&gt;由于那个二手笔记本噪声大，反应慢，感觉不太适合一些工作了，于是在网络寻觅一些性价比好的笔记本，主要考虑两点，便携和续航，最后选择了chromebook，第一次从国外买东西，很庆幸没被税，找了一款性价比还不错的型号，历经半个多月，笔记本也坐飞机。由于32G ssd不太适合装windows系统，于是装了ubuntu环境，享受linux的感觉。&lt;/p&gt;
&lt;p&gt;至于那个订餐项目，因为各方面的原因，种种不顺利，暂时就那么搁浅了。&lt;/p&gt;
&lt;h5&gt;0x05 合&lt;/h5&gt;
&lt;p&gt;十月，一开始在忙和完善图书社交平台，在赶进度。努力做出一个初步可以测试的产品，尽量在交的日期最后几刻不放弃。在交完作品以后发现在主界面部分如果不使用一些图片缓存框架的话，直接会导致报错，使用了一个图片缓存框架以后效果上不是很满意。但是当时没多想，也就没有抱太多希望。后来社团开始招新，然后就是一个联想茄子快传的比赛，基于他们的平台开发应用，联想社团那几天也是经常宣传，开宣讲会，虽然宣讲会那天看了一眼就走了，逐步从网络上了解这个比赛的信息，基本是做游戏，在上英语听说课的时候冒出一个做打砖块的想法，做游戏的话用引擎比较快，好多东西不需要深入考虑，于是找了几本cocos-2dx的书籍在那啃，感觉这个引擎社区人多，并且不是太笨重。从中了解导演、精灵、层等相关知识，当有一个初步的打砖块的模型的时候，准备结合人家的sdk进行进一步封装却遇到了问题，人家的是java写的，而这个引擎是C++，所以需要来回调用，所以用到了jni，但是jni处理相关调用的时候，却每次都没成功，实际上应该可以想办法解决，但是由于时间和经验问题，没精力去多想，既然人家的sdk是java的，就用java实现一个打砖块，然后结合起来吧。就这么连夜奋斗，做美工，做设计，就这么到了五十强，然后还得设计，还得完善，还得做美工，又是在临近交的日期，去连夜做。最后结果因为ui界面方面的分较其他的低所以没个好名次，毕竟ui不是强项，既不懂画图，也不懂原理。&lt;/p&gt;
&lt;p&gt;关于创业，有个孩子根据那个订餐项目报了一个校内的比赛，后来意外地进了前几名，直到决赛十强的时候，选到了最后一个出场，被迫借正装，关于市场的话编不了多少，所以有两孩子负责市场方面的提问，整体还是比较成功的，虽然项目和农业联系不太大，但是大多数评委还是很认可的，拿了金 奖。然后社团又参加山西省手机文化艺术节的展演，然后有时去去社团年会，然后又是晋商杯的创业比赛，根据六和杯创业比赛的名次，直接到了决赛，然后决赛虽然不是很好，但是也是没被淘汰，可以去榆次进一步比，但是榆次比的时候没太多准备，团队的协调不是很好，所以也结束了。&lt;/p&gt;
&lt;p&gt;在交完联想的作品以后，顺便看了一下搜狐快站的比赛，主要知识是前端部分的，基本不熟悉，但是做出个模型交得试一试吧，说不定人家让继续完善，结果这个比赛没多少人参加，一开始也是他们那边人联系的，一些比赛信息平台上也没有，最后取消了。后来这个比赛进入到了优秀选手，主办方要求发简历过去，试着看有没有实习机会。&lt;/p&gt;
&lt;h5&gt;0x06 后记&lt;/h5&gt;
&lt;p&gt;时间匆忙，应该有部分内容没有总结到。&lt;/p&gt;
&lt;p&gt;总结几点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;泛泛不如专注。&lt;/p&gt;
&lt;p&gt;有时间应该多去图书馆静心学习。&lt;/p&gt;
&lt;p&gt;不要急功近利。&lt;/p&gt;
&lt;p&gt;多进行总结。&lt;/p&gt;
&lt;p&gt;团队的协调问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;0x07 部分关键词&lt;/h5&gt;
&lt;p&gt;挂科，三维农大，学生会网站，社团活动，图书馆网站，移动互联网创业，wifi，nfc安全，饭盒网，四轴飞行器，移动互联网比赛，联想茄子快传，搜狐快站……&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Thu, 12 Feb 2015 12:22:00 +0100</pubDate><guid>tag:dbqf.xyz,2015-02-12:201502-2014.html</guid><category>2014</category><category>年终总结</category></item><item><title>php实现一些站长的工具</title><link>http://dbqf.xyz/201502-php-zhanzhang.html</link><description>&lt;h5&gt;0x01 前言&lt;/h5&gt;
&lt;p&gt;近期有一个任务，要求仿站长工具网，进行关键字，seo，whois，ip查询等。&lt;/p&gt;
&lt;h5&gt;0x02 计划与环境搭建&lt;/h5&gt;
&lt;p&gt;前端框架采用bootstrap，有一个比较方便的bootwatch，
生产环境的php版本为5.2.17，很多框架的新版本在5.3以下的不太适用，因此先搭建一个相应版本的php环境进行测试，
php要求性能的话，phalcon框架，是php的一个扩展&lt;/p&gt;
&lt;h5&gt;0x03 whois&lt;/h5&gt;
&lt;p&gt;whois功能需要根据域名后缀，来连接一些whois服务器进行查询，&lt;/p&gt;
&lt;h5&gt;0x04 ip查询&lt;/h5&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Thu, 12 Feb 2015 12:11:11 +0100</pubDate><guid>tag:dbqf.xyz,2015-02-12:201502-php-zhanzhang.html</guid><category>php</category><category>whois</category><category>seo</category></item><item><title>Hello,World!</title><link>http://dbqf.xyz/2015-create-blog.html</link><description>&lt;h5&gt;0x01 搭建环境&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux(Ubuntu)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Virtualenv&lt;/p&gt;
&lt;p&gt;sudo pip install virtualenv&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux(Centos)&lt;/p&gt;
&lt;p&gt;Windows&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;0x02 写作环境&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要采取一款开源在线的markdown编辑器，并计划在其基础上进行改进，使其更加符合个人习惯。&lt;/p&gt;
&lt;h5&gt;0x03 修改主题&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;Dubuqingfeng&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主题在bootstrap的样式和最近的material design材料样式之间纠结，在看了pelican的bootstrap的主题以后，想自己写一个主题，于是就去找关于material design设计的网站方面的资料，一开始谷歌推出这种设计语言的时候，大量应用于安卓应用，以摆脱应用风格不统一的问题，一些谷歌web网页也采取了这种设计。找到了多种设计框架，有material for bootstrap，materialize，...&lt;/p&gt;
&lt;p&gt;然后看了这两个官网，觉得materialize更简单，并且有相关实例，文档不难看懂，弄出的效果也接近material design。所以先用这种尝试写博客主题。写的时候，主要参考pelican文档里&lt;a href="http://www.baidu.com"&gt;主题编写&lt;/a&gt;部分，进行相关样式及模板的修改。&lt;/p&gt;
&lt;p&gt;在templates文件夹下，有base.html文件，其他继承这个文件，并且模板中还可以包含其他文件。设置或者读取常量可以在pelicanconf.py中配置。&lt;/p&gt;
&lt;h5&gt;0x04 插件配置&lt;/h5&gt;
&lt;p&gt;目前主要使用了&lt;a href=""&gt;sitemap&lt;/a&gt;，&lt;a href=""&gt;gravatar&lt;/a&gt;这两个插件，以后采用新插件的时候，还会补充。&lt;/p&gt;
&lt;h5&gt;0x05 程序维护&lt;/h5&gt;
&lt;p&gt;pelican使用jinja2进行模板渲染，需要定期查看是否有新版本。
jinja2
flask
Frozen-Flask
相关系统：
Cactus&lt;/p&gt;
&lt;h5&gt;0x06 域名等服务配置&lt;/h5&gt;
&lt;p&gt;因blog放在github pages上，所以域名绑定可以在目录下建立名为CNAME的文件，里面保存顶级域名。然后域名A记录指向dubuqingfeng.github.io&lt;/p&gt;
&lt;p&gt;SSL证书配置？&lt;/p&gt;
&lt;p&gt;因blog为静态的，也不需要涉及后台的操作，所以https加密显得不是特别重要。&lt;/p&gt;
&lt;p&gt;RSS的配置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# Feed generation is usually not desired when developing
FEED_RSS = u&amp;quot;feeds/all.rss.xml&amp;quot;
CATEGORY_FEED_RSS=u&amp;quot;feeds/%s.rss.xml&amp;quot;
FEED_ALL_ATOM = &amp;#39;feeds/all.atom.xml&amp;#39;
CATEGORY_FEED_ATOM = None
TRANSLATION_FEED_ATOM = None
AUTHOR_FEED_ATOM = None
AUTHOR_FEED_RSS = None
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后RSS的地址为/feeds/all.rss.xml&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 10 Feb 2015 12:11:00 +0100</pubDate><guid>tag:dbqf.xyz,2015-02-10:2015-create-blog.html</guid><category>github pages</category><category>pelican</category></item></channel></rss>