<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>独步清风's blog</title><link>dubuqingfeng.github.io/</link><description></description><atom:link href="dubuqingfeng.github.io/feeds/linux.rss.xml" rel="self"></atom:link><lastBuildDate>Sat, 16 May 2015 12:53:00 +0200</lastBuildDate><item><title>Linux VPS的一些配置</title><link>dubuqingfeng.github.io/posts/2015/%205/16/201505-vps-base-setting/index.html</link><description>&lt;h5&gt;0x01 更改默认ssh登录端口&lt;/h5&gt;
&lt;p&gt;一般ssh是开放的，容易受到攻击或者爆破等行为。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#vi /etc/ssh/sshd_config

#Port 22             //先把22注释掉
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;Port 2754            //添加一个新的端口
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启ssh服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x02 使用密钥登录而不是密码&lt;/h5&gt;
&lt;p&gt;在一个自用的vps上，避免使用密码登录，妥善保管好密钥，可以提高一定的安全性。&lt;/p&gt;
&lt;p&gt;一开始使用Xshell的密钥生成工具，在工具选项卡中，有新建用户密钥生成向导，选择RSA，密钥长度为2048位，下一步输入私钥密码，涉及到了非对称加密，详细原理正在读《深入浅出密码学》，一些RSA算法，在256位密钥以上进行蛮力攻击时耗费时间较长。生成了pub格式的公钥。&lt;/p&gt;
&lt;p&gt;将我们生成的pub公钥文件上传到/root/.ssh文件夹下面（如果没有我们需要创建），然后我们需要将id_rsa_2048.pub重命名为authorized_keys 并且用chmod 600 authorized_keys设置权限。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chmod 600 /root/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找到/etc/ssh/sshd_config ，把RSAAuthentication和PubkeyAuthentication两行前面的#注释去掉。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启sshd服务的另一种方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Debian/Ubuntu执行：/etc/init.d/ssh restart

CentOS执行：/etc/init.d/sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;禁止密码登录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/ssh/sshd_config 文件

找到PasswordAuthentication后面的yes改成no。
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x03 查看登录日志&lt;/h5&gt;
&lt;p&gt;首先进入日志目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /var/log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看ssh用户的登录日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;less secure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看登录成功的ip信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;last
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看登录失败的ip信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lastb
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;0x04 配置shadowsocks&lt;/h5&gt;
&lt;p&gt;安装setuptools&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install -y python-setuptools
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装完毕后，easy_install命令就可以使用了。&lt;/p&gt;
&lt;p&gt;安装pip，默认安装到/usr/bin目录下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;easy_install pip
pip install shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建shadowsocks的配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi /etc/shadowsocks.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{
        &amp;quot;server&amp;quot;:&amp;quot;your_server_ip&amp;quot;,
        &amp;quot;server_port&amp;quot;:8989,
        &amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
        &amp;quot;local_port&amp;quot;:1080,
        &amp;quot;password&amp;quot;:&amp;quot;yourpassword&amp;quot;,
        &amp;quot;timeout&amp;quot;:600,
        &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;,
        &amp;quot;fast_open&amp;quot;: false,
        &amp;quot;workers&amp;quot;: 1
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一些优化：&lt;/p&gt;
&lt;p&gt;安装 gevent可以提高 Shadowsocks的性能。CentOS下安装gevent依赖libevent和greenlet。&lt;/p&gt;
&lt;p&gt;安装libevent：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install -y libevent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装greenlet：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install greenlet
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装gevent：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install gevent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行shadowsocks服务端：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssserver -c /etc/shadowsocks.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果想在后台一直运行Shadowsocks，启动命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nohup ssserver -c /etc/shadowsocks.json &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;防火墙的设置&lt;/p&gt;
&lt;p&gt;编辑防火墙配置文件/etc/sysconfig/iptables，将服务器端口（server_port）放行。 新增一条防火墙规则：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-A INPUT -m state --state NEW -m tcp -p tcp --dport 8989 -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启防火墙iptables：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service iptables restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用docker部署shadowsocks服务。&lt;/p&gt;
&lt;p&gt;1.安装并测试Docker，可以参考官方文档。或者是《Docker入门与实践》安装一节。&lt;/p&gt;
&lt;p&gt;2.拉取镜像&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker pull index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.运行容器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker run -d -p 1984:1984 index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks -p 1984 -k sspassword -m aes-256-cfb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;1984即为服务器端口。&lt;/p&gt;
&lt;p&gt;sspassword为连接密码，自行更换。&lt;/p&gt;
&lt;p&gt;aes-256-cfb为加密方式。&lt;/p&gt;
&lt;p&gt;也可以使用-c /etc/shadowsocks.json参数。&lt;/p&gt;
&lt;p&gt;4.测试运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker ps -a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果出现up即为安装成功。&lt;/p&gt;
&lt;p&gt;Centos7版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker pull index.alauda.cn/dubuqingfeng/centos7-shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行容器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker run -d -p 1984:1984 index.alauda.cn/dubuqingfeng/centos7-shadowsocks -p 1984 -k sspassword -m aes-256-cfb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;0x05 Koding环境配置pelican简记&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Koding是一个在线IDE环境，适合进行Web方面的开发，支持Java、PHP、NodeJS、Perl、Python、Ruby、C、C++和Go等编程语言，貌似不太好绑定自定义域名。
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-pip
pip install pelican
sudo apt-get install python-virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;0x06 后记&lt;/p&gt;
&lt;p&gt;需要进一步学习SSH协议，Linux服务器管理，密码学，sock5代理，iptables。&lt;/p&gt;
&lt;p&gt;路漫漫，盖余之勤且艰若此。&lt;/p&gt;
&lt;p&gt;专注地做好每一件事。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sat, 16 May 2015 12:53:00 +0200</pubDate><guid>tag:,2015-05-16:dubuqingfeng.github.io/posts/2015/ 5/16/201505-vps-base-setting/index.html</guid><category>linux</category><category>vps</category></item></channel></rss>